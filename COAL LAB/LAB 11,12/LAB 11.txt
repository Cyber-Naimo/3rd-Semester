COPYTING STRING
TITLE My First Program (21k4530.asm)
INCLUDE irvine32.inc
.data

str1 byte "ENTER NO: ",0
str2 byte "Factorial OF NO: ",0
var DWORD 0
.code
main proc
cld
mov esi,offset str1
mov edi,offset str2
mov ecx,sizeof str1
rep movsb

mov edx,offset str2
call writestring

exit
main endp


END main

COMPARING A STRING
TITLE My First Program (21k4530.asm)
INCLUDE irvine32.inc
.data

str1 byte "abcd",0
str2 byte "abc",0	
str3 byte " str1 is > ",0
str4 byte " str2 is > ",0
var DWORD 0
.code
main proc
cld
mov esi,offset str1
mov edi,offset str2
cmpsb 
je l1
mov edx,offset str4
call writestring
jmp endd
l1:
mov edx,offset str3
call writestring
endd:
exit
main endp


END main



STRING OPERATIONS

INCLUDE Irvine32.inc
.data
string_1 BYTE "abcde////",0
string_2 BYTE "ABCDEk",0
msg0 BYTE "string_1 in upper case: ",0
msg1 BYTE "string_1 and string_2 are equal",0
msg2 BYTE "string_1 is less than string_2",0
msg3 BYTE "string_2 is less than string_1",0
msg4 BYTE "Length of string_2 is ",0
msg5 BYTE "string_1 after trimming: ",0
.code
main PROC
call trim_string
call upper_case
call compare_strings
call print_length
exit
main ENDP

trim_string PROC
; Remove trailing characters from string_1.
INVOKE str_trim, addr string_1, '/'
mov edx,OFFSET msg5
call WriteString
mov edx,OFFSET string_1
call WriteString
call Crlf
ret
trim_string ENDP

upper_case PROC
; Convert string_1 to upper case.
mov edx,OFFSET msg0
call WriteString
INVOKE Str_ucase, ADDR string_1
mov edx,OFFSET string_1
call WriteString
call Crlf
ret
upper_case ENDP

compare_strings PROC
; Compare string_1 to string_2.
INVOKE Str_compare, ADDR string_1, ADDR string_2
.IF ZERO?
mov edx,OFFSET msg1
.ELSEIF CARRY?
mov edx,OFFSET msg2 ; string 1 is less than...
.ELSE
mov edx,OFFSET msg3 ; string 2 is less than...
.ENDIF
call WriteString
call Crlf
ret
compare_strings ENDP
print_length PROC
; Display the length of string_2.
mov edx,OFFSET msg4
call WriteString
INVOKE Str_length, ADDR string_2
call WriteDec
call Crlf
ret
print_length ENDP
END main


Q1
include irvine32.inc

.data

str1 BYTE "127&j~3#^&*#*#45^", 0

.code

main PROC

cld
mov ebx, 0
mov ecx, lengthof str1
mov edi, OFFSET str1
mov al, '#'

loop1:
	scasb
	je printIndex
	inc ebx
loop loop1

printIndex:
mov eax, ebx
call writeInt

exit
main ENDP
END main
